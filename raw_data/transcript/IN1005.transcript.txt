oops. mm-hmm. the rapple also. no. okay. mm-hmm. with the link here in. mm-hmm. mm-hmm. mm-hmm. of the value, yeah, mm-hmm. mm of the previous r uh page rank or of the okay. mm-hmm. mm-hmm. mm-hmm. uh-huh. mm. okay. mm uh-huh. so wait uh, i don't get it. you you have two representation, one which comes from this link uh stuff, and one f this one is not based on p_l_s_a_ too? yeah. okay. y a t_, yeah, uh okay. yeah. yeah, okay, okay. okay. mm-hmm. ah uh okay. yeah yeah, it's okay. mm mm mm. yeah. or they use the perplexity on the the likelihood to say oh good, this likelihood is uh is it's smaller than the other. mm. mm-hmm. mm-hmm. uh it's the same. i it's making the assumption that uh this human categorisation is related to the one that is discovered uh mm. mm. oh, yeah. no, but but i have the feeling i in but in this case you you have to use uh the label one, yeah. your los but how does it enter in that? i i you have to train your uh your training data. yeah, but the point is that you should change in a way that to take the label into account, or not? okay. okay, okay. mm-hmm. mm-mm. no, but w but i no. the the there is not uh v uh perfect uh clustering clus wh what is the how do you judge uh what is a good clustering? and you're not exactly compar uh. you're comparing them ah, okay okay. yeah yeah. yeah. also like a baseline, yeah. you m you still not combi no no, but it's another mm. mm-hmm. mm. mm-mm. in fact i i have seen a paper in i_c_m_l_ where the guy was trying to learn which word he um aspects of clustering, so i give you i give the real users mm the person um a bunch of marbles and they begin to say okay, and they have to divide it in five group, and in the end it's not al it's it's always different to the clustering each people has, because it's completely subjective. but in but there is uh some characteristic that are for transparency, colour, which are um features that made the clustering, that can be extracted even if the clustering it's always different. so so that's only to say that uh it's it can be really infinitive clustering. mm-hmm. say another another example apart from uh this uh search. uh i don't get it exactly. what you mean, then don't don't use a google page because it's uh too uh s root, but uh another page mm. mm. mm-hmm. oh, it's not that people being your algorithm? that's the point? mm. it's getting mm-hmm, exactly. we're not trying to to fit yeah. mm. you had onl two topics? or no? yeah. yeah, yeah, yeah. mm-hmm. mm-hmm. it was linki, mm-hmm, mm-hmm. so it was a a good point for you. mm mm-hmm mm. like this, yeah, mm mm mm, okay. mm-hmm. mm. mm-mm. mm-mm, probably not, yeah. mm-mm. mm-mm. mm. yeah mm. and mm-hmm. yeah. um this alpha, i can it be dependent of the of the document? and how many text is in it? or something uh yeah. mm. mm-hmm, so mm. mm-hmm. mm-hmm. oh, of course. yeah, mm. mm. yeah, yeah, w w i think we've agree on that, yeah. mm-mm. mm. mm probably heuristic it will be easier to compute because mm-hmm. mm-hmm, yeah, mm. mm. mm. did you manage to to divide the link uh properly or okay. mm-hmm. l_d_a_. mm-hmm. mm-hmm. mm-hmm. mm-hmm. mm-hmm. mm pyramid, yeah. ah, okay. yeah. mm-mm. 'kay. mm-mm. in two months, yeah.
you never know whether you've got these things on right or not. you never know whether they're on right or not. feels wrong. okay, so i don't need that. okay. so david came in to me and to say uh i something we'd been talking about for a while was some stuff i'd been working on about using these topic models with uh with networks, with n things with links between them, documents that are linked. uh n uh it's actually it's related to rapple, but it's not actually that th this is something i haven't actually been working on for a couple of months now, uh just because i came up with something more interesting that i've been working on, but uh th at the time basically i'd been trying to use p_l_s_a_ and those types of models on web pages, and that came up with uh a big problem in that most web pages have very very little text on them. but you can tell what they're about based on the other texts on the site, the texts on the things they're linked to, so what i wanted to know was can you combine the topic models that the pages, that have lots of text on them, with something else that that tells you what a page that has no or very little text on it based on the links, yeah. so quite simply if you have a page one which is like a home page, and that'll maybe have five links and a picture on it, and then because it links to page two and page three. can you tell what this is about? yeah, so i started looking at uh google page rank, which kinda does this by saying well, the links go the other way, it says if this page is about fish or in google, they say if this page is good in some way, and it links to this other page, and we don't know what this is, then that page is more likely to be good. and it's just page rank is just a simple algorithm for doing this over the whole big network. so i wanted to combine the topic models that tell you beforehand what you think this page and this page are about with this to maybe get a better idea. so the idea is say you've got some text on a page, that's only part of the picture about what of what the page is really about, and the links pointing to that page are also part of the picture. so i basically came up with an algorithm that's just a i it plugs p_l_s_a_ uh plugs page rank into p_l_s_a_, right, so page rank you basically just d uh say you basically take the how good this page is, which is x_, and how good this page is, which is y_, and you then say this page is based on uh how do you do this? based on the the links coming into it, uh it's just a like a sum over all the the links of uh well, x_ link i guess. o of of the value. uh uh the but it's not it's yeah. if if so if this is page rank of x_, page rank of y_. i think this is roughly it off hand. page rank of z_. so you say page rank of z_ is equal to uh one over a constant to normalise it. uh sum over all the links into z_ of page rank of the link. yeah, tha it's like that, yeah? so similar idea. if you got a vector that says what the topics are, say you've learned from p_l_s_a_ a d a distribution of topics for every page, so if you say a probability of topic one for uh for page uh z_ uh is equal to, and you can use the same sort of thing. right, so nicking a whole bunch of maths from how you work out page rank, uh it comes up with uh just uh an iterative algorithm, which is just uh the current probability of topic one given z_, so that's probability old plus uh i yeah, plus that and then you normalise between them, so you say alpha and one minus alpha. yeah. so w basically what you're saying here, one minus alpha say link contribution you can call this i guess. so what you're saying is that a page is partly from its text that you've got on the page, and it's partly from what the links say it's about. so that alpha thing is how much do you trust the text on the page, and how much do you trust the links. so that alpha could be different for every page. so what i did then was try this on a big database of web pages. uh and i had some results from that, but they were all on temp two, so that's not important right now. uh but as it is not really important, i can regenerate that. the problem was that this gives you a new vector of topics for every page. so you've got two vectors, you've got the one that you've just got from p_l_s_a_ or whatever model, and you've got the one that you get from this. uh how do you tell which one's better? i had no way to evaluate this well. how do you tell that this page because you don't know where the topics are, 'cause they're learned automatically, uh so it it is, yeah, because uh b yeah, you initialise it with uh actually thi this is kinda wrong, this is not old, but start this is how you this is how you you start it off. so this this is what p_l_s_a_ gives you to start with, and then you iterate this and it becomes something else. yeah. mm-hmm. that's it, exactly, yeah. exactly, yeah, so you've now got you've got p_l_s_a_ gives you two probabilities, right? so it gives you a probability of a topic given a document, which is z_ given d_ and a probability of a word given a topic. so this is the same for both models. yeah? well yeah, what you do is you're taking this and iterating over it, the probability of the topic given the document. uh so have i made that clear, i'm i'm not sure if i'm explaining this well. okay. right, so y i you m yeah, so we were struggling at how do you evaluate this, because uh i mean if you look at the way that p_l_s_a_ and all those kind of models have been evaluated, it's th they never quantitative quantitatively do anything, they always say uh well, look at the clustering, there's here we've got some documents that all appear to be about the same thing, and here's where we get some other documents that all appear to be about the same thing, and you can't really tell exactly how good that is, you can just get an idea that it's yeah, so tha that's the first thing th that thing when i spoke to you about this, you suggested d use the likelihood and pedro came up with a really good example why that could be bad. so you have uh you have the uh oh, let me thing of what this was. it was to do with cars basically, if you have you have a topic that's uh representing cars, and you can tell that that's representing cars by looking at this distribution, and it's the same for both. now you wanna tell which i i this page, uh pedro's example of what it was, is that is says on the page lotus elise. okay? and that uh no f i can't i just remember it was a really can you ig remember what it was? no, okay. yeah, i didn't really consider doing it on perplexity, actually, that to be hon but okay. okay. is that fair though, because i think one of the things with these topic models is that you don't know you can't make them cluster okay. hmm. yeah. okay. and that is is that really fair though? can you say that if a set of documents if the clustering of these documents is closer to the effecti what you what you've got there is uh a clustering of documents a as your devaluation, yeah? uh thi this these labels, the yahoo categories, that's that's a clustering. so you're by saying that this clustering is closer to that clustering is is does that necessarily mean that it's better? mm-hmm. okay. mm-hmm. mm-hmm. mm-kay. mm. we uh i think your point was that you you train this without labelling first, yeah? mm. mm-hmm. well th yeah, the the thing that worries me about this approach is that say the really really really simple example of this where your directory had two categories in it, uh good and bad, and and and you run p_l_s_a_ on it, now that doesn't do it good and bad, it does, i dunno, english and french pages, so they don't match, but the clustering is still very good in in one respect. uh but but you you can extend that up, even if you have a hundred categories, p_l_s_a_ can find a hundred clusters that are a good clustering, but are completely unrelated to the directory. hmm. but but what i wanna know i is that which of them has the better representation of a given page. so so given a random page, uh and these two models, uh and the wo the words that these two models give, which is more likely to mm-hmm. mm. mm-hmm. mm-hmm. okay. yeah. okay. s okay. i'm i'm just n concerned that that's uh that that's it's answering a question that evaluates in some way, but maybe not in the way that well that maybe not is the same way i was thinking, but maybe it's a better way um so what i mean by that is that sorry, i'm trying to process all this. uh yeah, i it's the same thing, like it it does tell you whether this uh which clustering is better for this task, but it doesn't tell you which clustering better represents the pages necessarily. but it it's it you you could say that it possibly doe it probably does. okay. mm. yeah i mm. okay. mm. i think mm. uh no, i th i'm i'm coming round to it actually. no, i'm so i i i think i g uh i i get it. uh i i th i think it probably is fair, i'm just i i've gotten um uncomfortable with it, but i think that'll go if i think about it enough. uh but but yeah, the it it but it just seems a little suspect, but i think that's just from the whole point that you can't tell which clustering is b better. but uh what i'd thought before was could you get people to evaluate this by by hand basically, could you give people a set of pages and like say you did it with five topics for example. uh now you give people five sheets uh you give uh a t a a user five sheets of paper, each with words in varying sizes representing the probability of that topic for example. try give the user these pieces of paper to get an idea of what these topics are, that's this p_ of w_ given z_. and then you give them some pages, and say which one would you which piece of paper would you put that with, and then you get like an intuitive ide uh like how would a person cluster pages given the what these topics supposedly are. 'cause i you've got something that's fixed, the the p_ of w_ given z_ with respect to both models. so i was tr i was hoping you could use that to mm. mm-hmm. mm-hmm. yeah, okay. hmm. okay. see, the the thing about web pages i thought as well in that getting humans to evaluate it in some way is that you have most of the web pages that are uh well a lot of the web pages that are important in some way are are are home pages, so google dot com doesn't actually say the words search on it, i think. i maybe it says go, but you only know it's about search through the thing, but someone looking at it can tell that it's a search engine, because of the way it's laid out, because of the pictures on it and because of all of that. there's a lot of information that's completely lost in this bag of words representation, and i was hoping that in some way you could use that to evaluate this. i have no idea how, but uh yeah. mm. yeah. mm. yeah. okay, i think i know it. but it yeah, thi this is effectively what we have here though, and th that directory is one clustering of the marbles. and you're hoping that it it so what you're saying is that i have two clusterings of marbles for my two models, and i have a test clustering of marbles. it's saying that one of these is more close to the test t t to the the one that we've been given, is that it's saying that what does that actually say? that doesn't uh it says it's g better for this task, but it doesn't really say anything else. mm-hmm. okay. okay. okay. uh and so and so if i get that right, what what the algorithms are still coming up with is in this way you're looking at a clustering of marbles, yeah? if each of the algorithms comes up with a defin ah okay, right, that makes sense. okay. okay. okay. i'm convinced, i'm convinced, alright. so it's good. right. uh alright, well thanks. um i'm trying to think of anything i haven't said about the stuff, but that uh from looking at the results i got it looked quite good, um just like hand reading them in that one of the things i did was i started a i a web crawl at the idiap homepage. it did not very many pages, only like two thousand or something like that, but enough to get the pages that were close to idiap to have a lot of links between them. so that there was enough to be able to run this link clustering algorithm. so what you find is that the pages around idiap, there's a lot of english pa speaking pages and a lot of french speaking pages, so of course this uh p_l_s_a_ completely separated those out into into categories. uh so when i looked at the the word likelihoods, there were two topics. one was very clearly english words that most likely word was the, and one was very clearly french words most likely words was de i think and uh no, i had many topics. the others looked like garbage, couldn't tell what they might have been. but anyway, uh tha that's often the case, when you look at it you can tell very clearly that one or two topics are a b not the rest, yeah. it is. ok hmm. that w uh anyway, that when i run it on that, uh what i found was, looking through some of the sites uh i looked for the sites that the models differed on, that where one said it was probably an english phrase and the other said it was probably a french phrase, and i found a good few examples where you had a site that looked uh well one that i remember off hand was it was a page and it was a big picture, and links down the site, but the links were all pictures. so you couldn't the the words were in french and the links, but there were no words picked up by the when i did the crawl for the model. and there was a small bit down here, and in this there was uh meant to be picture in there, but it didn't load uh or uh b it was meant to be something else, and it said uh in english it said four o_ four this page cannot be found. so all the words on this page were english, but it was very very clearly a french page. so the first model said it was an english page 'cause all the words were in english, second model said very definitely a french page because all of these pointed to french sites and it was only pointed to it was something dot f_r_ as well, it's yeah. so i i found a couple of examples that were kinda like that. mm but the the problem that i found when i ran it, uh the th the thing that was a bad point was that if you have uh say tryin i was trying to say if you could evaluate this with search given some keywords like which model would more likely find you a p good document, that that sort of approach. uh what i found was that say you had uh uh th tha that's not too relevant necessarily, but if you have say a topic distribution for uh one page, and it very very highly scores on the p_l_s_a_ for one of the the topics, and that's right, okay, this model, because it's averaging out over all the pages nearby, all of the topic distributions become more flat. it it becomes more uncertain about everything. so i don't know if that's necessarily a good thing or not, yeah. in in some cases it's gonna be a bad thing, b because ev every page is linked by the way the algorithm works, every page is linked eventually to everything else, so it every page has information incorporated in it. or i the distribution learned for every page has information incorporated in it, from every other page's distribution as well, so it averages out, it flattens all the distributions, depending on what this alpha is. mm-hmm. well i i think that the thing is yeah, that that there's a balance in the uh for example take a page like uh slashdot, and it's like a news site uh for geeks, and you have uh nerds, yeah. news for nerds, stuff that matters. uh all of the like hundreds of thousands of pages point to that, but they're about completely different things, so you in effect are losing information about what that page is about, because there's so many things pointing to it and they all average out as yeah, so that th that's my first idea w was how i set this i remember for the lotus thing wasn't there? um so i thought you wanna probably set this alpha per page, there's probably some heuristics, for example this page, there's no text in it, will set it very low in user information for the links. problem is, this is what pedro immediately said, what if you have a page that looks like this? it's got a big picture of a car uh anyway, and it says lotus elise, so you know that it's definitely about car, but it's only got two words. so you can't just do it by words, because those two words completely specify into something or other. uh su you suggested doing likelihood, but at that time and i can't remember what my problem was with that. it might not have been a good thing, but you've got two likelihoods for it as well. no, maybe not. mm. yeah, maybe do it by cross-validation, something. okay, there's mm. hmm. yeah, that that is fair. yeah, okay. it yeah, d no. yeah, i so uh i i think that that's too easy. you can do it with some heuristics and you can learn it from the task results in or combine the two, so tha that's kinda straightforward, i think. yeah, the the the thing about doing it through cross-validation or something like that with the task is uh the problem with doing a page rank style algorithm is that is that it gets better it it converges better and it gives you better results, the closer a network is to being a small world network. so small world network mean basically some far links, but generally very clustered locally. uh now the thing about doing a web crawl is, the bigger your web crawl, the closer it'll be to the overall structure of the net n the internet, which is a small world network. the smaller your web crawl, the less small world network like it's gonna be. so the more pages you get, the better your results. and people running this style of algorithm, the page rank style stuff, generally run it on about two million or twenty million pages, or whatever. the the stanford web base data set that i was using for this, for for a bit of this um, they have a a d i can't remember off hand, but they have m maybe a bit over a theta byte worth of web pages in this, a bunch of servers. uh yeah, maybe wikipedia is a good thing to do. was i was concerned about wikipedia though was that it's while it has a high level of inside links that has a lot of directory style links as well that might mess up it actually being a see wh while you have ah okay, that's good. that plus i guess it's actually straightforward to say to start with is this a small world network and then run it on that. you were running that on what we what was it, like half a million pages, something like that? is it and that was for half of it? uh if i remember. okay. okay, the whole thing was mm. mm-hmm. okay. i mean i think off hand thinking about this model it would have to work better, because two things in the same category are going to be linked. so it it yeah. okay. yeah, that's i think tha it's gonna be more true in some networks and in some tasks than others, and i think in the wikipedia it's probably gonna be it's a good one to test on. mm-hmm. okay. okay. hmm. mm-hmm. okay. yeah, it i'll maybe i'll have a look at the wikipedia stuff anyway. i'm stuck doing something else for the next month or two anyway, so. uh this is always the case. uh the there's another thing, um uh this was new but i haven't thought about this too much, but it's on the same lines in that uh have have you guys seen this uh correlated topic models work? correlated topic models. it's david blei, the guy that came up with uh with l_d_a_. he's got uh a new model that's it's published in nips this year, but his co-author put it on their web site a month or two ago. so uh you know l_d_a_? d you all know l_d_a_ or yeah. uh okay. so a l_d_a_ you basically draw a a dirichlet which says like what type of document this is effectively, and then you draw a topic given that dirichlet distribution and then you draw words given that. alright, well that's for for every word and that's once for the document and that's you've got a parameter coming at this globally. so that that's roughly what the model is, plus other little bits. but anyway, so what they did was they they reworked this because one of the problems with l_d_a_, and i think p_l_s_a_ has this problem as well in is that uh the more topics you have, the less uh expressive it can be, because the topics it cluster it it pushes a document if it is pulling a document into one topic, it pushes another topic away from that. doesn't that make sense? so the topics are necessarily trying to be different from each other. so the more topics you have, the more th they're sort of squeezing into the space of what things can be about uh and things are kinda pushed out, so once you m go over you try it one corpus, and once you go over about a hundred, maybe two hundred topics, uh the the new you add more topics and it doesn't get better in any way, the model doesn't. the n new topics are effectively going to just be garbage. uh, alright, so what they did was they they they stopped using the dirichlet and uh they're starting to use uh a gaussian there. so it it in to spare the details basically, they've they've got a variable here, i think they call it eta uh and they from this generate a distribution of topics in some way, but it's generated from a gaussian space, from a from a a space, so it's given a a mean and covariance uh and yeah, uh so what it does, the this is the the bit that took me forever to understand actually, uh same model, but this is given a gaussian space it maps that down into the simplex of what a topic can be about. the so the simplex basically if you've got a say you've got two topics. now say i i say you get three topics, that makes more easier to draw. uh for this is theta one theta two theta three, these are the probabilities that that a document is about uh this theta one is the probability that this document is about topic one. theta two is so these guys all have to add up to one, yeah? uh so that basically means that what a document is about lies on this space between them, yeah. so this is the simplex. uh so basically a distribution generated by this guy is basically a point on this simplex. so what they do is they've got a distribution that maps uh a gaussian and some space into a distribution on this thing, so it maps it into gaussian in that. the cool thing about that is that if you've got two gaussians, you can tell how close they are. so you can now tell how close two topic distributions are, right? so you can have as many as you like, uh and you can tell that they're close to each other, so there's load of ideas that i had about this uh in that if you can tell that two topic distributions are close to each other. so for example if you split a document into two parts and said that the two parts have to be close in the distribution, you can see how the doc t the document changes, for exa stu stuff based on that. with this idea, what if rather than working with this p_ of z_ given d_ thing that you had from p_l_s_a_, but what if you worked from these gaussians that you get for every document and you said that in some some function that said uh that the gaussian representing this should be similar to the ones linking to it. now i haven't thought about any of the maths for this, but but it should be uh straightforward i guess to to formulate a basic in terms of the mean should be similar and the covariance maybe should be similar as well. so it might actually be a better model again. i dunno. i'll send you guys the link for that correlated topic model stuff if you want, but uh i don't know if it's too interesting to you. okay. alright, well than thanks for hearing me out and the idea especially. maybe i can do more with this. alright. yeah,. yeah, b bastien, you can't release this data for four months.
yeah. okay. okay. okay. yeah. it is the initialisation of. yeah. but then it is iterative. okay. so you you should first train the p_l_s_a_ stuff, then you initialise this link uh spreading thing, and then you iterate over okay. and it converge and so you have the boost uh initial p_l_s_a_ and p_l_s_a_ plus the link thing then. yeah. mm. yeah. so th yeah, you you you were saying that you would like to evaluate that now. yeah, right. hmm. but but maybe you you could have some some other labelli li or the task like if if you imagine you have some labelling on of of the web pages like like like for example you you look at at at at at a set of pages, and you have the m the directory entries of these pages, so so f like yahoo or entries, so you have categories and and entries, so for example you have i dunno, cars, s_u_v_, etcetera. so what you would like would be that two pages on in the same um category should be closer than than two pages being spread across different categories. but you you would not use this you will not use the yahoo directory or n the directory in the training step of i of the model, okay. this is something you have just for evaluation, and then for example you you your task would be to say i have some page and and i know where it is in the in the in the directory, and i have another page, i don't know where it is, and i would like to to know uh whether it is in the same category as the first one, just by comparing their uh aspects. if they have the same uh yeah. so basically what you would like to check if is is is there some similarity in the in the in the aspect distribution, tells me uh something about uh the sim the the fact that they could be on the same category in the the this end end label categories. yeah. yeah. yeah, yeah. yeah. no no no no no. how would so so so w what what you would have have basically would be to have a directory which give you labels for some part of the documents. okay, so this is a directory and this is some some some some web page, okay. so the labelled one, okay. and you have some page which are unlabelled but you have links between those two. so what what you would do is that you would try and p_l_s_a_ and and uh and use a model over that. then then you would like to for example what f what could be very simple would be just to then to match each pages like that. so let's say you have you have a a page which is labelled, and you say okay, the the label page two should get should be the one w which it is the most similar to, or any kind of classification rules you can imagine. and so and so you say okay, what what's if i from from this page which have the similar so so the the criterion would be to compare those two distribution, okay, and then and then you would like to assign to this document too where you don't know the labels the same one as this one. and and here, that you use only for test, so this is your. then you can evaluate how wrong you are or cu how close you are from the real assignment, the right directory category. in this way i think it's fair if you kn if you know only if you know only that and that and what you would like to discover is this. this is a r like a real task. like like if if if this directory uh uh company would like to extend this directory to new pages without the hassle of having human labelling. yeah, you have t you use this one. you you only have the labels for some uh small part of the so so you you would train it you this is this is t t all all those links are known. the links between some labelled document and unlabelled document. i d i think you can do it as a two step process. first you you train uh well maybe s it wou could be better if if if you take it into account. but but maybe you can you can do just a two step process, first one you have this uh unsupervised task over both p_l_ and p_u_, and then you from these unsupervised starts you can know which document of p_l_ is close from the document of p_u_ or the reverse. and you can infer some label to a document of p_l_. yeah. yeah yeah. yeah, but yeah. yeah. but but here you can you you say given a random page of p_u_, which of those two model is more likely to to to to to say for example that thi the page of p_l_ which is the most similar, so you so so from this so you take any distribution comparison things, so so hoffmann in his paper was doing just cosine similarity, but you can do anything. so so you just compare uh those two distributions so of d_ one and d_ two, okay? and so with that you can you can determine for example for a document o of the set two to the most similar so you you you you select d_ one so in this set which is the most similar to d_ two according to the distribution from one or the other model and then and then for this document you automatically assign to it the label of the document uh one and you check with this which is your uh your your if you are right or not. this is what what this is very related to what frank did with the with the keyword uh image annotation. so you would have a set of keywords, the set of image label with keywords, and he has a set of unlabelled image with some, and it would check whether the the label he assigns, so in this case annotation word h are correct. and i think it's fair uh it's fair uh setup. so maybe this classification rule is not the best. there there's some might be some work to do, but the general idea, i think it's it's fair evaluations, it's a task. that can be dep yeah. yeah. no, but according to this directory yeah. yeah. i i i think it's w yeah. yeah. yeah. what's good with the directory is that you have a good coverage of various topic humans humans can label. but then if you want to detect different languages, this is another task. i think the task of this latent model is to discover some some semantic like some topic proximity between documents, and here this la this directory is doing the same thing, like associating some topics with some documents manually. so comparing them is is is is good setup with respect to the goal. i compare those two, like the p_l_s_a_ and the one over this same task of assigning good directory. i don't know if if it if it will provide good result result or not, but it is clearly a benchmark for those two goals. on on the infra yeah, yeah. yeah. like bag o yeah. yeah, you can have tree setups, uh yeah. yeah, basic cosine over the p_ of t_ given d_, so over all this uh empirical distribution. and the two uh aspect uh models. we have to repeat over and over. this is like advertisement. no no, it's joke. no, it's jus yeah, yeah. this is really yeah, yeah. yeah. yeah. yeah. yeah. yeah. but the point is that the z_ the the the aspect like the z_ are are are come unsupervisely. it's it's more like if you were giving the people you you said to them okay, uh divide me this bunch of documents into five topics, and you don't give them the topics a priori, you know. so the two person could come up with very different one is very interesting i in yeah. right. yeah. so i i think i think it's yeah. yeah. yeah. but eve ev even someone would would provide very different labels, like like someone would say it's a page in english, someone would say it's a it's a it's a it's a it's a web page uh wh which has very few uh information in it or anything. so i think there's no hard clustering, and what's good with those model is that they they can they they are intended to provide you some some kind of way to compare two documents rather than to give you pre-defined sets of documents. this is not hard clustering. the o i i don't think one one one aspect or one latent topic has any sense by his own. it's when you have the word set and the word distribution that you c you can tell something. if you just take one of them alone, so you take all the p_ of z_ given d_ and all of the p_ of w_ given giv given z_, you you you can do anything with that. it's it's the whole set. i would say an an and this is oh it it should be evaluated, meaning that like for example uh the the example about marbles is that the point what you can learn from all these sets made by people is that is that those two those two marble would be consider as more likely to be in the same sets, because they they share some common properties which are not seen as the same for every one. but they share some common properties that people will notice. and if you look at the two the d all possible pairs of marble, you would have some mu much more agreement between people than than if you look at the predefined sets people would would just cut at some precise uh point. you know what's yeah. yeah. well you don't you don't really have two clustering no no no no, you don't you don't really have two clustering. no no no no, you don't have two clustering of of of marbles. what you have is y is you have is you have one clustering of marble, which is this one, and then you have lots of people telling you i consider those marbles as very uh have to have very salient feature that they share in common, i i c i would like them to be in the same cluster. and you c and and and those two, so and one of them is labelled, and the other is not labelled. so you look at that, you say oh, someone told this one was very similar, and this one is said to be blue for example, i dunno if it's the label. so i put it in the blue bag. but but you don't you never use the blue bag, you don't ask the people to look at the blue bag. you just look at the people you you just have the people to compare those two marbles. and then it happens that some of them have been clustered. and and yeah. yeah. yeah, this is i reverse both role. the this is the players. i i no no no no no. it comes up with not with the clustering but with some way to compare two marbles, okay. some would say would say i consider those two ones are completely dissimilar, and the other ones say they are very similar. and if you find that in your unl unlabelled clustering those two uh balls uh marbles happen to be in the same uh cluster, you said the user algorithm might be wrong. but you average that over lots of documents. yeah. yeah. yeah. yeah. they make sense only so global optimisation, the likelihood is optimisable globally over the whole aspects, etcetera. so it's it's you never ask the model to do hard clustering of documents, you just uh ask uh it to find a distribution over aspects such that a document uh is more likely according to the restriction that the number aspe aspect is limited. and and so it the it just makes sense on the uh looking at the whole set. so y i think all evaluation should take that into account and look at the whole aspect set. like here you look at the aspect set because you look at the similarity of two distribution. an any st any kind of thing you where you un unfold the model and look at it manually, looks weird, like like in those hoffmann papers where show you columns with words or things. okay. okay. okay. yeah. yeah. yeah. yeah. but also it depends on that could be a good effect. because if you if you can be if you can if you are uh highly reliable about one page, but all the page linking to it are actually about very different topics, so you could say maybe i was wrong from deciding only due to the text that this page was about this aspect distribution, because because all the other pages are voting in different direction. while there's a balance hmm. yeah. pedro's always speaks about cars. but i think for any kind of way you have to select those alpha you you have to look at the effect on on the re on the t evaluation task. and then maybe you can find some patterns that are then then once you have the once you have the task, you could look at at which pages are completely missed by one model, which others are are successful with one model, and and you can maybe infer some some rules afterwards. but if you have no task, you can uh blindly select s good alphas. like like if if you look at uh if you look at your task and you see that, i dunno uh, the the long pages for example have good p_l_s_a_ model without fusing links, so then you can infer some heuristics like okay, the alpha should be proportional to the lengths or anything like that, or to the number of image in the pages, or anything. but you should have some some task where you can individually look at the performance on every on every page. and and and and at as a second step you could infer some kind of rule about how to select alphas with respect to the task. maybe it's v it's very simple rules, but select them blindly s might be odd. yeah. yeah. yeah. yeah. yeah. but but but still li like the the the work i did on on hyperlinks, like i used uh wikipedia, i i think it's g because it has fairly high level of inside links between yeah. well you can categorise them because they are th it's there's a structure on the on the web page. so you you can select only the links which are within the article or within the categories or it's it's it's well-structured, it's it's uh easy to manipulate and yeah. you can even isolate the directory from the categories of wikipedia. well yeah, actually i i i divided in three equal size parts which have one hundred fifty documents. there are a thousand documents. and well, but well, what i did with the link well, but this is not th exactly the same setup you would have. so in this setup, the whole link structure could be known, and the only thing you wou don't you w don't know would be the assignation to uh to a category. in my setup it was different, because i i sh i couldn't use the links between different sets. but this is not i don't want to mess you up with that, it's not the same kind of experiment. but you could just use the whole corpus like this, and and for some of them you assume you don't know the the category assignment. and then you can run this set of experiments over wikipedia. yeah. but this is the yeah, this is the hypothesis between this uh in this p_l_s_a_ with link stuff. oh yeah, i thi yeah. but you can you can think also at at other uh task like that. like for example you can take proceedings and assume the categories are the keywords of the of the d of the documents, and then if you have the archive of a journal, you can you can use the l the links between uh the citation links. so if you want to have a bigger stuff so wikipedia would be kind of very small with lots of engli in links, and then if you take a journal you will have less links and and more documents. and then you would be likely to say that p_l_s_a_ might be better over that, because you don't have enough links. so you you you can find examples which are not the web i think it's good to work in closed set. wikipedia is kind of closed set, ma even if there's lots of outside links, but there's lots of inside links. you have to think at at at at at at at database where there's lot of in links. wikipedia might be one, citation, for example if if you take the nips arch archive, which is available. nips author always other nips author, which are often themselves, etcetera. well, it's reported, i i won't say. so but but but but yeah, i think th th this kind of setup maybe web pages it's hard to find, sets of web pages which have good links stuff if you start from one page or something. okay. but it's discrete uh no, the okay. yeah. yeah. 'kay, yeah, thanks. okay, yeah. well there are lots of good ideas that are recorded and someone will yeah. because the data like will be released very soon.
so is it correct or no? hmm? yeah. well, so we hope. mm-hmm. mm-hmm. yeah. mm-hmm. oh, this is is frozen frozen okay. mm-hmm. yeah,. perplexity, uh. yeah. oh, no re no i don't even remember the the you said i would tell you that evaluation should be done based on likelihood or perplexity. well it's bu yeah, it's basically the same, but i dunno. yeah, another task or yeah. mm-hmm. yeah. no no no, i no no no no, it's doesn't have to be that if if you use the latent representations or distribution over aspects, you could use this to save two documents uh in the same directory or not. and this you should be able to evaluate then. um yeah. clearly wha we we had done these. you can train after that uh an s_v_m_, saying this is category one or two on the label document, and then we will have an unlabelled document and you just say this is directory one or two. and if it should improve it, if you say this feature extraction process is better than you can have a better cleaner separation between those two. yeah, well but yeah, well, but i mean if you have to judge it's with respect to a given task, i mean you can't say of course it's always good, because it's maximising the likelihood of whatever. yeah. mm. yeah, it's the same. mm-hmm. fus. mm-hmm. yeah. 'cause i don't think there is any way to say generally this this is better or worse. yeah. it has to be re it has to be really to with respect to this, this clustering makes sense or i dunno. yeah. you can e even keep the bag of words and do the cosine comparison or just showing just showing how just first how better this is with respect to bag of words and hopefully then how you new uh regularised p_l_z_ given d_ is. i dunno just uh yeah it's basic. mm-hmm. but yeah. yeah. yeah, just know where. yeah. mm-hmm. yeah, yeah. no, it does yeah. it doesn't have to match. yeah. but yeah, it just re mm-hmm. yeah. because the the latent aspects really doesn't have to match the final uh directory category. it can be anything but it's just a way of saying yeah, those documen documents are similar in some sense. so is it just it just sometime dangerous to say th these latent aspects means this. yeah, i think yeah. good, good good. mm-hmm. yeah, and the others usually don't mean anything, yeah. mm-hmm. mm-hmm. okay. for your model, mm, good. nerd. nerd. mm. yeah, cars and web. mm-hmm. mm-hmm. which ones, uh? no, no. hmm. okay. well in in three months. oh yeah, it's too late, three months. we should wait.
